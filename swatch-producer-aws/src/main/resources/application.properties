SERVER_PORT=${clowder.endpoints.swatch-producer-aws.port:8000}
SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT=http://${clowder.endpoints.capacity-ingress.hostname}:${clowder.endpoints.capacity-ingress.port}
AWS_REGION=us-east-1
AWS_MANUAL_SUBMISSION_ENABLED=false
AWS_SEND_RETRIES=0
AWS_USAGE_CONTEXT_LOOKUP_RETRIES=0
AWS_MARKETPLACE_ENDPOINT_OVERRIDE=false
ENABLE_SPLUNK_HEC=true
SPLUNK_HEC_URL=https://splunk-hec.redhat.com:8088/
SPLUNK_SOURCE=swatch-producer-aws
SPLUNK_SOURCE_TYPE=quarkus_service
SPLUNK_HEC_BATCH_SIZE=10
SPLUNK_HEC_BATCH_INTERVAL=10S
SPLUNK_HEC_RETRY_COUNT=3
SPLUNK_HEC_INCLUDE_EX=false
TALLY_IN_FAIL_ON_DESER_FAILURE=true

# dev-specific defaults; these can still be overridden by env var
%dev.AWS_CREDENTIALS_JSON=[{"accessKeyId":"accessKey","secretAccessKey":"placeholder","sellerAccount":"awsSellerAccountId"}]
%dev.SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT=http://localhost:8101/subscriptions/
%dev.AWS_MARKETPLACE_ENDPOINT_URL=http://localhost:8101/aws-marketplace/
%dev.AWS_MARKETPLACE_ENDPOINT_OVERRIDE=true
%dev.AWS_MANUAL_SUBMISSION_ENABLED=true
%dev.SWATCH_SELF_PSK=dummy
%dev.ENABLE_SPLUNK_HEC=false
%dev.SPLUNK_HEC_URL=https://splunk-hec.prod.utility-us-east-2.redhat.com:8088/
%dev.SPLUNKMETA_host=${USER}@${HOSTNAME}
%dev.SPLUNKMETA_namespace=local
%dev.SPLUNK_HEC_INCLUDE_EX=true

# set the test profile properties to the same values as dev; these get activated for @QuarkusTest
%test.AWS_CREDENTIALS_JSON=${%dev.AWS_CREDENTIALS_JSON}
%test.SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT=${%dev.SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT}
%test.AWS_MARKETPLACE_ENDPOINT_URL=${%dev.AWS_MARKETPLACE_ENDPOINT_URL}
%test.AWS_MARKETPLACE_ENDPOINT_OVERRIDE=${%dev.AWS_MARKETPLACE_ENDPOINT_OVERRIDE}
%test.AWS_MANUAL_SUBMISSION_ENABLED=${%dev.AWS_MANUAL_SUBMISSION_ENABLED}
%test.SWATCH_SELF_PSK=${%dev.SWATCH_SELF_PSK}
%test.ENABLE_SPLUNK_HEC=${%dev.ENABLE_SPLUNK_HEC}
%test.SPLUNKMETA_host=unit_tests

# dev-specific config items that don't need to be overridden via env var
# do not use JSON logs in dev mode
%dev.quarkus.log.console.json=false
%dev.quarkus.log.category."com.redhat.swatch".level=DEBUG

quarkus.http.port=${SERVER_PORT}
# make quarkus choose a dynamic port for testing to avoid port collisions w/ simultaneous tests
quarkus.http.test-port=0
# expose swagger-ui and openapi JSON/YAML on turnpike-friendly paths
quarkus.smallrye-openapi.path=/api/${quarkus.application.name}/openapi
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/api/${quarkus.application.name}/swagger-ui

#clowder quarkus config takes care of setting these, no need to try to do clowder.kafka.brokers[0]

# Common kafka settings
kafka.bootstrap.servers=localhost:9092
quarkus.reactive-messaging.kafka.serializer-generation.enabled=false

# Consumer settings
mp.messaging.incoming.tally-in.fail-on-deserialization-failure=${TALLY_IN_FAIL_ON_DESER_FAILURE}
mp.messaging.incoming.tally-in.connector=smallrye-kafka
mp.messaging.incoming.tally-in.topic=platform.rhsm-subscriptions.tally
# Go back to the first records, if it's our first access
mp.messaging.incoming.tally-in.auto.offset.reset = earliest

# Producer settings
mp.messaging.outgoing.tally-out.connector=smallrye-kafka
mp.messaging.outgoing.tally-out.topic=platform.rhsm-subscriptions.tally

quarkus.rest-client."com.redhat.swatch.clients.swatch.internal.subscription.api.resources.InternalSubscriptionsApi".url=${SWATCH_INTERNAL_SUBSCRIPTION_ENDPOINT}
quarkus.rest-client."com.redhat.swatch.clients.swatch.internal.subscription.api.resources.InternalSubscriptionsApi".providers=com.redhat.swatch.rest.SwatchPskHeaderFilter
com.redhat.swatch.processors.TallyTopicProcessor/lookupAwsUsageContext/Retry/maxRetries=${AWS_USAGE_CONTEXT_LOOKUP_RETRIES}
com.redhat.swatch.processors.TallyTopicProcessor/send/Retry/maxRetries=${AWS_SEND_RETRIES}

quarkus.log.handler.splunk.enabled=${ENABLE_SPLUNK_HEC:false}
quarkus.log.handler.splunk.url=${SPLUNK_HEC_URL:https://splunk-hec.redhat.com:8088/}
quarkus.log.handler.splunk.token=${SPLUNK_HEC_TOKEN:replaceme}
quarkus.log.handler.splunk.metadata-source=${SPLUNK_SOURCE:swatch-producer-aws}
quarkus.log.handler.splunk.metadata-source-type=${SPLUNK_SOURCE_TYPE:quarkus_service}
quarkus.log.handler.splunk.metadata-host=${SPLUNKMETA_host:${USER}@${HOSTNAME}}
quarkus.log.handler.splunk.batch-size-count=${SPLUNK_HEC_BATCH_SIZE:10}
quarkus.log.handler.splunk.batch-interval=${SPLUNK_HEC_BATCH_INTERVAL:10S}
quarkus.log.handler.splunk.max-retries=${SPLUNK_HEC_RETRY_COUNT:0}
quarkus.log.handler.splunk.metadata-fields.namespace=${SPLUNKMETA_namespace:local}
quarkus.log.handler.splunk.format=%d %-5p [%c{3.}] (%t) %s%e%n
quarkus.log.handler.splunk.include-exception=${SPLUNK_HEC_INCLUDE_EX:false}

